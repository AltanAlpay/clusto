#!/usr/bin/env python
from clusto.scripthelpers import init_script
import clusto

from optparse import OptionParser
from traceback import format_exc
from pprint import pprint
import sys

class AttrQuery(object):
    def __init__(self, obj):
        self.obj = obj

    def __call__(self, **kwargs):
        if 'csv' in kwargs:
            output_csv = kwargs['csv']
            del kwargs['csv']
        else:
            output_csv = False

        result = self.obj.attrs(**kwargs)
        result.sort(key=lambda x: (x.key, x.number, x.subkey, x.value))

        if output_csv:
            for x in result:
                attr = [x.key, x.number, x.subkey, x.value]
                for i, val in enumerate(attr):
                    if val == None:
                        attr[i] = ''
                    attr[i] = str(attr[i])
                print ','.join(attr)
        else:
            maxkey = 3 + max([len(str(x.key)) for x in result] + [0])
            maxsubkey = 6 + max([len(str(x.subkey)) for x in result] + [0])
            maxnumber = 3 + max([len(str(x.number)) for x in result] + [0])

            if maxkey < 5: maxkey = 5
            if maxsubkey < 8: maxsubkey = 8
            if maxnumber < 5: maxnumber = 5

            print ''.join(['KEY'.ljust(maxkey, ' '), 'SUBKEY'.ljust(maxsubkey, ' '), 'NUM'.ljust(maxnumber, ' '), 'VALUE'])
            for attr in result:
                print ''.join([str(x).ljust(maxsize, ' ') for x, maxsize in [
                    (attr.key, maxkey),
                    (attr.subkey, maxsubkey),
                    (attr.number, maxnumber),
                    (attr.value, 0),
                ]])

def main():
    parser = OptionParser(usage='%prog (add|set|delete|show) [options] <object>')
    parser.add_option('-k', '--key', dest='key', default=None)
    parser.add_option('-s', '--subkey', dest='subkey', default=None)
    parser.add_option('-v', '--value', dest='value', default=None)
    parser.add_option('-n', '--number', dest='number', default=None)
    parser.add_option('-m', '--merge', dest='merge_container_attrs', action='store_true', help='Merge attributes from this object\'s parent objects')
    parser.add_option('-c', '--csv', dest='csv', action='store_true', help='Output from the show action will be comma-delimited, rather than pretty')
    options, args = parser.parse_args()

    if len(args) < 2:
        parser.print_help()
        return -1

    action, object = args[:2]

    try:
        object = clusto.get(object)
    except LookupError:
        sys.stderr.write('%s does not exist\n' % object)
        return -1
    object = object[0]


    actions = {
        'add':  object.add_attr,
        'set':  object.set_attr,
        'delete': object.del_attrs,
        'del': object.del_attrs,
        'show': AttrQuery(object),
    }

    func = actions.get(action.lower(), None)
    if not func:
        sys.stderr.write('Unknown action: %s\n' % action)
        return -1

    if options.number:
        options.number = int(options.number)

    if isinstance(options.value, str) and options.value.isdigit():
        options.value = int(options.value)

    opts = dict([(k, v) for k, v in options.__dict__.items() if v != None])
    func(**opts)

if __name__ == '__main__':
	init_script()
	sys.exit(main())
