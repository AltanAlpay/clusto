#!/usr/bin/env python
import clusto
from clusto.scripthelpers import init_script

import sys

def main():
    if len(sys.argv) < 2:
        print 'Usage: %s <server name>' % sys.argv[0]
        return -1

    try:
        server = clusto.get(sys.argv[1])
    except LookupError:
        sys.stderr.write('%s does not exist.' % sys.argv[1])
        return -1
    server = server[0]

    ip = server.get_ips()
    if not ip:
        print '%s does not have an IP. Cannot FAI' % server.name
        return -1
    else:
        ip = ip[0]

    mac = server.attr_values(key='port-nic-eth', subkey='mac', number=1)
    if not mac:
        print '%s does not have a MAC. Cannot FAI' % server.name
        return -1
    else:
        mac = mac[0]

    print 'IP:'.ljust(16, ' '), ip
    print 'MAC:'.ljust(16, ' '), mac

    pool = clusto.get_by_name('fai')
    if not server in pool:
        pool.insert(server)

    classes = server.attr_values(key='fai', subkey='class', merge_container_attrs=True)
    print 'FAI classes:'.ljust(16, ' '), ' '.join(classes)
    print 'Pools:'.ljust(16, ' '), ' '.join([x.name for x in server.parents(clusto_types=['pool'])])

    if not [x for x in classes if x.lower().find('disk') != -1]:
        print '\nWARNING: This server does not have a DISK config. FAI will likely fail.\n'

    sys.stdout.write('Are you absolutely sure you want to FAI %s (yes/no)? ' % server.name)
    sys.stdout.flush()

    try:
        line = sys.stdin.readline().rstrip('\r\n')
    except KeyboardInterrupt:
        line = False

    if line != 'yes':
        print 'Aborting'
        pool.remove(server)
        return
    
    server.power_reboot(captcha=False)

    print '%s is rebooting now.' % server.name

if __name__ == '__main__':
    init_script()
    main()
