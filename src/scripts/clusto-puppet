#!/usr/bin/env python

import sys
from optparse import OptionParser

parser = OptionParser(usage="usage: %prog")
(options, args) = parser.parse_args(sys.argv)


import clusto.scripthelpers

config, logger = clusto.scripthelpers.initScript()

from clusto import *

def main(argv):
    (opts, args) = parseargs(argv)

    try:
        clusto_node = clusto.getByName(args[0])
    except LookupError:
        return 1

    clusto_attrs = clusto_node.attrs(key='puppet',
				     mergeContainerAttrs=True,
				     )
    classes = get_puppet_classes(clusto_attrs)
    params = get_puppet_params(clusto_attrs)
    node_info = {'classes': classes, 'parameters': params}

    print yaml.dump(node_info, default_flow_style=False)
    return 0

def get_puppet_classes(attrs):
    return [str(attr.value) for attr in attrs if attr.subkey == 'class']

def get_puppet_params(attrs):
    parameter_attrs = [attr for attr in attrs if attr.subkey != 'class']
    return [{str(attr.subkey): str(attr.value)} for attr in parameter_attrs]

def parseargs(argv):
    usage = "usage: %prog node-name"
    parser = OptionParser(usage=usage)

    (opts, args) = parser.parse_args(argv)

    if len(args) != 1:
        parser.error("Incorrect number of arguments!")
    return (opts, args)

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
