#!/usr/bin/env python

import sys
import os

from clusto import cmdln

import clusto

from clusto.scripthelpers import *
from optparse import OptionParser

from subprocess import Popen

def main(argv):

    options, args = parseargs(argv)
    
    os.environ['PATH'] = ':'.join([p for p in sys.path if p.endswith('bin')]) + ':' + os.environ['PATH']
    if args[0] != 'help':
	config = setupClustoEnv(options)    
    
    try:
	print runcmd(args)
    except CommandError, x:
	print x
	return 1

    return 0

def parseargs(argv):
    parser = OptionParser()
    parser.disable_interspersed_args()
    parser.add_option('-c', '--config', dest="configfile", help="config file",
		      metavar="FILE")
    parser.add_option('-d', '--db', dest='dsn', help="databse dsn", 
		      metavar="DSN")
    

    return parser.parse_args(argv)

def runcmd(args):
    
    args[0] = 'clusto-' + args[0]
    cmdname = args[0]
    paths = os.environ['PATH'].split(':')

    cmd = None
    for path in paths:
	cmdtest = os.path.join(path, cmdname)
	if os.path.exists(cmdtest):
	    cmd = cmdtest
	    break

    if not cmd:
	raise CommandError(cmdname + " is not a clusto-command.")

    
    os.execvpe(cmdname, args, env=os.environ)


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
        
